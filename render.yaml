# هذا الملف يخبر Render بكيفية بناء ونشر كل خدمة في مشروعك

# أولاً: نُعرّف قاعدة البيانات
databases:
  - name: media-platform-db
    databaseName: media_platform_db
    user: db_user
    # <-- تم حذف سطر "plan" بالكامل من هنا ليعتمد على خطة حسابك

# ثانياً: نُعرّف جميع الخدمات والتطبيقات
services:
  # 1. الخادم الخلفي (Backend)
  - type: web
    name: backend
    plan: starter
    env: docker
    dockerfilePath: ./backend/Dockerfile
    dockerContext: ./backend
    healthCheckPath: /api/token/
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: media-platform-db
          property: connectionString
      - key: GEMINI_API_KEY
        sync: false

  # 2. الواجهة الأمامية (الرئيسية)
  - type: web
    name: frontend
    plan: starter
    env: docker
    dockerfilePath: ./frontend/Dockerfile
    dockerContext: ./frontend

  # 3. خدمة مزامنة الفيديو
  - type: web
    name: video-sync-service
    plan: starter
    env: docker
    dockerfilePath: ./services/video-synchronizer/Dockerfile
    dockerContext: ./services/video-synchronizer
    envVars:
      - key: GEMINI_API_KEY
        sync: false

  # 4. خدمة صياغة الأخبار
  - type: web
    name: news-refine-service
    plan: starter
    env: docker
    dockerfilePath: ./services/news-refine/Dockerfile
    dockerContext: ./services/news-refine
    envVars:
      - key: GEMINI_API_KEY
        sync: false
  
  # 5. خدمة مولد الأفاتار
  - type: web
    name: avatar-service
    plan: starter
    env: docker
    dockerfilePath: ./services/dynamic-avatar/Dockerfile
    dockerContext: ./services/dynamic-avatar
    envVars:
      - key: GEMINI_API_KEY
        sync: false

  # 6. خدمة بوت الأخبار
  - type: web
    name: chatbot-service
    plan: starter
    env: docker
    dockerfilePath: ./services/news-chatbot/Dockerfile
    dockerContext: ./services/news-chatbot
    envVars:
      - key: GEMINI_API_KEY
        sync: false

  # 7. خدمة أتمتة أخبار الشرق
  - type: web
    name: asharq-service
    plan: starter
    env: docker
    dockerfilePath: ./services/asharq-automation/Dockerfile
    dockerContext: ./services/asharq-automation
    envVars:
      - key: GEMINI_API_KEY
        sync: false

  # 8. خدمة مساعد البودكاست
  - type: web
    name: podcast-service
    plan: starter
    env: docker
    dockerfilePath: ./services/podcast-helper/Dockerfile
    dockerContext: ./services/podcast-helper
    envVars:
      - key: GEMINI_API_KEY
        sync: false
        
  # 9. خدمة محرر الأسلوب
  - type: web
    name: style-editor-service
    plan: starter
    env: docker
    dockerfilePath: ./services/style-editor/Dockerfile
    dockerContext: ./services/style-editor
    envVars:
      - key: GEMINI_API_KEY
        sync: false

  # 10. خدمة محول الانفوجرافيك
  - type: web
    name: infographic-service
    plan: starter
    env: docker
    dockerfilePath: ./services/infographic-converter/Dockerfile
    dockerContext: ./services/infographic-converter
    envVars:
      - key: GEMINI_API_KEY
        sync: false
```eof

### **الخطوات التالية**
1.  **استبدل** محتوى ملف `render.yaml` بهذا الكود الجديد.
2.  **ارفع التغييرات** إلى GitHub.

هذه المرة، عند المزامنة، لن يجد Render خطة محددة لقاعدة البيانات، وبما أن حسابك احترافي، سيقوم تلقائيًا باختيار الخطة المدفوعة المناسبة. أنا واثق جدًا أن هذا التبسيط سيحل مشكلة المزامنة بشكل نهائي.